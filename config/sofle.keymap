/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        holdtapf1: holdtapf1 {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAPF1";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <1>;
            tapping-term-ms = <800>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |        | ExtPw |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |        | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESCAPE      &holdtapf1 F1 N1  &holdtapf1 F2 N2  &holdtapf1 F3 N3               &holdtapf1 F4 N4  &holdtapf1 F5 N5                                   &kp N6  &kp N7     &kp N8     &kp N9    &kp N0    &kp DEL
&kp TAB         &kp Q             &kp W             &kp E                          &kp R             &holdtapf1 P T                                     &kp Y   &kp U      &kp I      &kp O     &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A             &kp S             &kp D                          &kp F             &holdtapf1 L G                                     &kp H   &kp J      &kp K      &kp L     &kp SEMI  &kp RIGHT_SHIFT
&kp LCTRL       &kp Z             &kp X             &kp C                          &kp V             &holdtapf1 M B    &kp K_MUTE    &ext_power EP_TOG  &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RCTRL
                                  &mo 2             &holdtapf1 LG(LS(S)) LEFT_WIN  &kp LEFT_ALT      &tog 1            &kp SPACE     &kp ENTER          &mo 2   &kp RCTRL  &kp RALT   &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans  &kp N7     &kp N8  &kp N9  &kp KP_MINUS  &kp KP_DIVIDE                                  &kp F6     &kp F7    &kp F8           &kp F9     &kp F10   &kp F11
&trans  &kp N4     &kp N5  &kp N6  &kp KP_PLUS   &kp KP_MULTIPLY                                &kp N6     &kp N7    &kp N8           &kp N9     &kp N0    &kp F12
&trans  &kp N1     &kp N2  &kp N3  &kp COMMA     &holdtapf1 DELETE BACKSPACE                    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp PIPE
&trans  &kp EQUAL  &kp N0  &kp N0  &kp LEFT      &kp RIGHT                    &trans    &trans  &kp LBKT   &kp RBKT  &kp SEMI         &kp COLON  &kp BSLH  &trans
                   &kp N0  &trans  &trans        &trans                       &trans    &trans  &trans     &trans    &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans     &trans    &trans    &trans     &trans   &trans
&out OUT_TOG  &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &sys_reset                      &kp PG_UP  &trans    &kp UP    &trans     &kp N0   &trans
&out OUT_USB  &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK                        &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &kp BSPC
&out OUT_BLE  &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans    &trans  &trans     &trans    &trans    &trans     &trans   &trans
                            &trans        &trans        &trans        &trans        &trans    &trans  &trans     &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
